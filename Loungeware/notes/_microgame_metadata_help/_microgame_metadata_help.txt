	---------------------------------------------------------------------------------------------------------------
	
	                                          METADATA CHEAT SHEET

	---------------------------------------------------------------------------------------------------------------
	yourname_gamename: {                                This is the key for your game. it should be prefixed 
														with your name followed by an underscore and then your 
														game name. make sure it is unique.
														this will never be displayed to the player.
	- - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - -
	game_name: {string} 								The name of your game, to be displayed to the player. 
														you can call it whatever you want, just make sure it fits 
														on the gameboy screen.
	- - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - -											
	creator_name: {string}								Your name, to be displayed to the player.
														Again, make sure it fits on the gameboy screen.
	- - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - -													
	prompt: {string}									This is a short message that will pop up on the screen 
														right before your game starts. It should be as short/simple 
														as possible. For example: A game where you dunk a cookie 
														should have a prompt like "DUNK". 
														An exclamation point (!) is automatically appended to the 
														end of every prompt.
	- - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - -
	init_room: {room_index}								The initial room to load for your game.
	- - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - -
	view_width: {int}									The initial view width/height for your game. the view 
	view_height: {int}  								will be stretched to fit the gameboy screen. the aspect ratio 
														is (3:2), the canvas resolution is 480x320, so use that if you 
														want it to be 1:1. You can change the view size at any time
														during your microgame if you need to.
														IMPORTANT: IF YOU ARENT SURE ABOUT THIS, SET THESE VALUES TO 
														480x320. 
	- - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - -
	time_seconds: {int}								    The length of the timer for your game, in seconds. 
														You should try to aim for a game that is about 4-6 seconds 
														long, but 12 seconds is the absolute maximum. 
														The timer will continue to count down after your game is 
														marked as won so it is important to get the time right so 
														the player isn't waiting around for more than a couple
														of seconds after winning.
														(note: the remaining time after a win would be a good time 
														to show some kind of win animation. See Warioware for ideas)
	- - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - -
	music_track: {sound_index}                          The index of a song to begin playing when your game starts.
														The song will automatically be faded out when your game ends.
														The volume of the songs is set according to the current 
														volume settings for the player. If you created your own song
														and need adjust the volume, you can do so using the slider
														in the asset window.
														If you need to do something more advanced with your music,
														such as playing multiple tracks, set this property to noone
														and check out the the public_functions script for more
														audio functions.
														If you don't want to or can't make your own music, we have
														some default songs to choose from. Just ask.
	- - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - -											
	music_loops: {boolean}								Whether or not to loop your song.
														If true, your song will loop until your microgame ends.
	- - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - -
	interpolation_on: {boolean}						    Whether or not to turn on "interpolate colours between pixels" 
														for your game. In most cases if you are making a pixelart
														game, you should set this as false.
	- - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - -
	cartridge_col_primary: {colour}						The colours for your game's cartridge. Press "T" at any time
	cartridge_col_secondary: {colour}					when the game is running in test mode to preview what your
														cartridge will look like.
	
	- - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - -
	cartridge_label: {sprite_index}						A sprite to use as the label on your game's cartridge.
														it should be 152x72 pixels.
	- - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - -
	supports_difficulty_scaling: {boolean}              If your game gets harder based on the current DIFFICULTY var, 
														set this to true. Otherwise, set to false.
	- - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - -
	default_is_fail: {boolean}							when this is set to "true", the microgame will automatically
														be counted as a fail if the timer runs out before
														microgame_win() is called.
														If you set this var to "false" then the opposite will occur:
														the game will automatically be counted as a win on timeout
														unless microgame_lose() was called
	- - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - -
	supports_difficulty_scaling: {boolean}				Whether or not your game supports multiple difficulty levels.
														DIFFICULTY is a global variable you can check at any time
														it can be any number from 1-5 and increases as the player
														plays more microgames without getting a game over.
														Supporting this is entirely optional. But if you do plan to
														support difficulty scaling then you should set this var to 
														true. 
	- - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - -
	credits: {array}									an array of strings containing the names of people you want
														to credit for your game. you can use this to credit royalty
														free services too if they require a credit. at some point
														these names will be displayed in a credits screen that is 
														accessible from the main menu. they will not be seen during
														gameplay
	- - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - -
	date_added: {string}								Date the game was added, formatted as a string like this:
														"YY/MM/DD". this doesn't need to be super accurate.
														it's just in case we ever need to sort the games by date